-- Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")

-- Player
local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local root = char:WaitForChild("HumanoidRootPart")
local hum = char:WaitForChild("Humanoid")

-- Ghost
local ghost = Workspace:FindFirstChild("Ghost")
Workspace.ChildAdded:Connect(function(c)
    if c.Name == "Ghost" then ghost = c end
end)

-- Items
local itemsFolder = Workspace:FindFirstChild("Items")
if not itemsFolder then warn("Items folder not found!") end

-- Toggles / State
local noclip = false
local fullbright = false
local temperature = "N/A"
local savedPosition = nil
local toggles = {}

-- =========================
-- UTILITY FUNCTIONS
-- =========================
local function getItemsList()
    local list = {}
    if itemsFolder then
        for _, child in pairs(itemsFolder:GetChildren()) do
            if child:IsA("Model") then
                table.insert(list, child:GetAttribute("ItemName") or child.Name)
            end
        end
    end
    return list
end

-- =========================
-- VISUAL FUNCTIONS
-- =========================
local fullbrightConnection
local function setFullBright(enable)
    fullbright = enable
    if enable then
        fullbrightConnection = RunService.Stepped:Connect(function()
            Lighting.GlobalShadows = false
            Lighting.Brightness = 2
            Lighting.Ambient = Color3.fromRGB(255,255,255)
        end)
    else
        if fullbrightConnection then fullbrightConnection:Disconnect() fullbrightConnection = nil end
        Lighting.GlobalShadows = true
        Lighting.Brightness = 0
        Lighting.Ambient = Color3.fromRGB(0,0,0)
    end
end

-- =========================
-- PLAYER FUNCTIONS
-- =========================
local noclipConnection
local function toggleNoclip(enable)
    noclip = enable
    if enable then
        noclipConnection = RunService.Stepped:Connect(function()
            for _, part in pairs(char:GetDescendants()) do
                if part:IsA("BasePart") then part.CanCollide = false end
            end
        end)
    else
        if noclipConnection then noclipConnection:Disconnect() noclipConnection = nil end
        for _, part in pairs(char:GetDescendants()) do
            if part:IsA("BasePart") then part.CanCollide = true end
        end
    end
end

local function savePosition()
    savedPosition = root.CFrame
end

local function teleportSavedPosition()
    if savedPosition then
        root.CFrame = savedPosition
    end
end

-- =========================
-- GHOST FUNCTIONS
-- =========================
local ghostHighlight
local function setGhostPOV(enable)
    if ghost and ghost:FindFirstChild("Humanoid") then
        Workspace.CurrentCamera.CameraSubject = enable and ghost.Humanoid or char.Humanoid
    end
end

local function setGhostVisible(enable)
    if ghost and ghost:FindFirstChild("VisibleParts") then
        for _, part in pairs(ghost.VisibleParts:GetChildren()) do
            if part:IsA("MeshPart") then
                part.Transparency = enable and 0 or 1
            end
        end
    end
end

local function toggleGhostESP(enable)
    if enable then
        if ghost then
            ghostHighlight = Instance.new("Highlight")
            ghostHighlight.FillColor = Color3.fromRGB(255,0,0)
            ghostHighlight.FillTransparency = 0.5
            ghostHighlight.OutlineColor = Color3.fromRGB(255,0,0)
            ghostHighlight.OutlineTransparency = 0
            ghostHighlight.Parent = ghost
        end
    else
        if ghostHighlight then ghostHighlight:Destroy() ghostHighlight = nil end
    end
end

-- =========================
-- ITEMS FUNCTIONS
-- =========================
local activeHighlights = {}
local activeLabels = {}

local function toggleItemsESP(enable)
    if not itemsFolder then return end
    if enable then
        for _, item in pairs(itemsFolder:GetChildren()) do
            if item:IsA("Model") and (item.PrimaryPart or item:FindFirstChildWhichIsA("BasePart")) then
                local highlight = Instance.new("Highlight")
                highlight.FillColor = Color3.fromRGB(255,255,0)
                highlight.FillTransparency = 0.8
                highlight.OutlineColor = Color3.fromRGB(255,255,0)
                highlight.OutlineTransparency = 0
                highlight.Parent = item
                activeHighlights[item] = highlight

                local gui = Instance.new("BillboardGui")
                gui.AlwaysOnTop = true
                gui.Size = UDim2.new(2,0,0,20)
                gui.ExtentsOffset = Vector3.new(0,2,0)
                gui.Parent = item.PrimaryPart or item:FindFirstChildWhichIsA("BasePart")

                local label = Instance.new("TextLabel")
                label.Text = item:GetAttribute("ItemName") or item.Name
                label.Size = UDim2.new(1,0,1,0)
                label.TextColor3 = Color3.fromRGB(255,255,255)
                label.BackgroundTransparency = 1
                label.TextScaled = true
                label.Font = Enum.Font.SourceSansBold
                label.Parent = gui
                activeLabels[item] = gui
            end
        end
    else
        for _, hl in pairs(activeHighlights) do hl:Destroy() end
        for _, gui in pairs(activeLabels) do gui:Destroy() end
        activeHighlights = {}
        activeLabels = {}
    end
end

local function dropItemNoclip(itemName, offset)
    if toggles[itemName] then toggles[itemName]:Disconnect() toggles[itemName] = nil end
    toggles[itemName] = RunService.RenderStepped:Connect(function()
        for _, item in pairs(itemsFolder:GetChildren()) do
            if item:IsA("Model") and item:GetAttribute("ItemName") == itemName then
                local pp = item.PrimaryPart or item:FindFirstChildWhichIsA("BasePart", true)
                if pp then
                    pp.CanCollide = false
                    pp.CFrame = root.CFrame + offset
                end
            end
        end
    end)
end

-- =========================
-- TROLL FUNCTIONS
-- =========================
local function powerOverload()
    local roomsFolder = Workspace:WaitForChild("Map"):WaitForChild("Rooms")
    local event = ReplicatedStorage:WaitForChild("Events"):WaitForChild("UseLightSwitch")
    for _, room in pairs(roomsFolder:GetChildren()) do
        if room:IsA("Folder") then
            if not room:GetAttribute("LightsOn") then
                event:FireServer(room)
            end
        end
    end
end

local function fixFuseBox()
    ReplicatedStorage:WaitForChild("Events"):WaitForChild("ToggleFuseBox"):FireServer()
end

-- =========================
-- GUI SETUP (Rayfield)
-- =========================
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Window = Rayfield:CreateWindow({
    Name = "[UPD] Demonology Hub",
    LoadingTitle = "Demonology Hub",
    Theme = "Ocean",
    ConfigurationSaving = {Enabled=true, FolderName="DemonologyHub", FileName="Config"},
})

-- ===== Ghost Tab =====
local GhostTab = Window:CreateTab("Ghost", "ghost")
GhostTab:CreateToggle({Name="üëª Ghost POV", CurrentValue=false, Callback=setGhostPOV})
GhostTab:CreateToggle({Name="üëª Show Ghost Body", CurrentValue=false, Callback=setGhostVisible})
GhostTab:CreateToggle({Name="üëª Ghost ESP", CurrentValue=false, Callback=toggleGhostESP})

-- ===== Items Tab =====
local ItemsTab = Window:CreateTab("Items", "hammer")
ItemsTab:CreateToggle({Name="üëÅÔ∏è ESP Items", CurrentValue=false, Callback=toggleItemsESP})
ItemsTab:CreateDropdown({Name="üõ†Ô∏è Select Item", Options=getItemsList(), CurrentOption={"None"}, Callback=function(opt) 
    selectedItem = opt[1]
end})
ItemsTab:CreateButton({Name="‚û°Ô∏è Bring item", Callback=function()
    if not selectedItem then return end
    for _, item in pairs(itemsFolder:GetChildren()) do
        if item:IsA("Model") and item:GetAttribute("ItemName") == selectedItem then
            item:PivotTo(root.CFrame + Vector3.new(0,0,-4))
        end
    end
end})
ItemsTab:CreateButton({Name="üìü Drop Item Noclip", Callback=function()
    if selectedItem then dropItemNoclip(selectedItem, Vector3.new(0,2,-3)) end
end})

-- ===== Player Tab =====
local PlayerTab = Window:CreateTab("Player", "user-round-cog")
PlayerTab:CreateSlider({Name="üèÉ WalkSpeed", Range={10,100}, Increment=1, CurrentValue=16, Callback=function(val) hum.WalkSpeed = val end})
PlayerTab:CreateToggle({Name="üßç Noclip", CurrentValue=false, Callback=toggleNoclip})
PlayerTab:CreateButton({Name="üö© Save Position", Callback=savePosition})
PlayerTab:CreateButton({Name="üö© Teleport Saved", Callback=teleportSavedPosition})

-- ===== Visual Tab =====
local VisualTab = Window:CreateTab("Visual", "eye")
VisualTab:CreateToggle({Name="üî¶ FullBright", CurrentValue=false, Callback=setFullBright})

-- ===== Troll Tab =====
local TrollTab = Window:CreateTab("Troll", "server")
TrollTab:CreateButton({Name="üí° Power Overload", Callback=powerOverload})
TrollTab:CreateButton({Name="üí° Fix FuseBox", Callback=fixFuseBox})
